{"version":3,"sources":["LineChart.js","ToolTip.js","InfoBox.js","App.js","registerServiceWorker.js","index.js"],"names":["LineChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hoverLoc","activePoint","data","min","x","max","length","reduce","p","y","_this$props","svgWidth","yLabelSize","getX","_this$props2","svgHeight","xLabelSize","gY","getY","_this2","_this$props3","color","pathD","getSvgX","getSvgY","map","point","i","join","react_default","a","createElement","className","d","style","stroke","_this3","x1","y1","x2","y2","strokeDasharray","_this$props4","transform","concat","textAnchor","toLocaleString","currency","e","_this4","_this$props5","svgLocation","document","getElementsByClassName","getBoundingClientRect","adjustment","width","relativeLoc","clientX","left","svgData","push","svgX","svgY","closestPoint","c","Math","abs","stopHover","setState","onChartHover","_this$props6","pointRadius","r","cx","cy","_this$props7","_this5","_this$props8","height","viewBox","onMouseLeave","onMouseMove","getCoords","makeAxis","makePath","makeArea","makeLabels","createLine","makeActivePoint","Component","defaultProps","ToolTip","placementStyles","InfoBox","currentPrice","monthChangeD","monthChangeP","updatedAt","getData","fetch","then","json","bitcoinData","price","bpi","USD","rate_float","change","changeP","toFixed","time","updated","catch","console","log","refresh","setInterval","clearInterval","id","moment","fromNow","App","fetchingData","sortedData","count","date","format","src_InfoBox_0","src_ToolTip_0","src_LineChart_0","b","handleChartHover","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b9be2ff1.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport \"./LineChart.css\";\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverLoc: null,\n      activePoint: null\n    }\n  }\n  // GET X & Y || MAX & MIN\n  getX(){\n    const {data} = this.props;\n    return {\n      min: data[0].x,\n      max: data[data.length - 1].x\n    }\n  }\n  getY(){\n    const {data} = this.props;\n    return {\n      min: data.reduce((min, p) => p.y < min ? p.y : min, data[0].y),\n      max: data.reduce((max, p) => p.y > max ? p.y : max, data[0].y)\n    }\n  }\n  // GET SVG COORDINATES\n  getSvgX(x) {\n    const {svgWidth, yLabelSize} = this.props;\n    return yLabelSize + (x / this.getX().max * (svgWidth - yLabelSize));\n  }\n  getSvgY(y) {\n    const {svgHeight, xLabelSize} = this.props;\n    const gY = this.getY();\n    return ((svgHeight - xLabelSize) * gY.max - (svgHeight - xLabelSize) * y) / (gY.max - gY.min);\n  }\n  // BUILD SVG PATH\n  makePath() {\n    const {data, color} = this.props;\n    let pathD = \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\n\n    pathD += data.map((point, i) => {\n      return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\n    }).join(\"\");\n\n    return (\n      <path className=\"linechart_path\" d={pathD} style={{stroke: color}} />\n    );\n  }\n  // BUILD SHADED AREA\n  makeArea() {\n    const {data} = this.props;\n    let pathD = \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\n\n    pathD += data.map((point, i) => {\n      return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\n    }).join(\"\");\n\n    const x = this.getX();\n    const y = this.getY();\n    pathD += \"L \" + this.getSvgX(x.max) + \" \" + this.getSvgY(y.min) + \" \"\n    + \"L \" + this.getSvgX(x.min) + \" \" + this.getSvgY(y.min) + \" \";\n\n    return <path className=\"linechart_area\" d={pathD} />\n  }\n  // BUILD GRID AXIS\n  makeAxis() {\n    const {yLabelSize} = this.props;\n    const x = this.getX();\n    const y = this.getY();\n\n    return (\n      <g className=\"linechart_axis\">\n        <line\n          x1={this.getSvgX(x.min) - yLabelSize} y1={this.getSvgY(y.min)}\n          x2={this.getSvgX(x.max)} y2={this.getSvgY(y.min)}\n          strokeDasharray=\"5\" />\n        <line\n          x1={this.getSvgX(x.min) - yLabelSize} y1={this.getSvgY(y.max)}\n          x2={this.getSvgX(x.max)} y2={this.getSvgY(y.max)}\n          strokeDasharray=\"5\" />\n      </g>\n    );\n  }\n  makeLabels(){\n    const {svgHeight, svgWidth, xLabelSize, yLabelSize} = this.props;\n    const padding = 5;\n    return(\n      <g className=\"linechart_label\">\n        {/* Y AXIS LABELS */}\n        <text transform={`translate(${yLabelSize/2}, 20)`} textAnchor=\"middle\">\n          {this.getY().max.toLocaleString('us-EN',{ style: 'currency', currency: 'USD' })}\n        </text>\n        <text transform={`translate(${yLabelSize/2}, ${svgHeight - xLabelSize - padding})`} textAnchor=\"middle\">\n          {this.getY().min.toLocaleString('us-EN',{ style: 'currency', currency: 'USD' })}\n        </text>\n        {/* X AXIS LABELS */}\n        <text transform={`translate(${yLabelSize}, ${svgHeight})`} textAnchor=\"start\">\n          { this.props.data[0].d }\n        </text>\n        <text transform={`translate(${svgWidth}, ${svgHeight})`} textAnchor=\"end\">\n          { this.props.data[this.props.data.length - 1].d }\n        </text>\n      </g>\n    )\n  }\n  // FIND CLOSEST POINT TO MOUSE\n  getCoords(e){\n    const {svgWidth, data, yLabelSize} = this.props;\n    const svgLocation = document.getElementsByClassName(\"linechart\")[0].getBoundingClientRect();\n    const adjustment = (svgLocation.width - svgWidth) / 2; //takes padding into consideration\n    const relativeLoc = e.clientX - svgLocation.left - adjustment;\n\n    let svgData = [];\n    data.map((point, i) => {\n      svgData.push({\n        svgX: this.getSvgX(point.x),\n        svgY: this.getSvgY(point.y),\n        d: point.d,\n        p: point.p\n      });\n    });\n\n    let closestPoint = {};\n    for(let i = 0, c = 500; i < svgData.length; i++){\n      if ( Math.abs(svgData[i].svgX - this.state.hoverLoc) <= c ){\n        c = Math.abs(svgData[i].svgX - this.state.hoverLoc);\n        closestPoint = svgData[i];\n      }\n    }\n\n    if(relativeLoc - yLabelSize < 0){\n      this.stopHover();\n    } else {\n      this.setState({\n        hoverLoc: relativeLoc,\n        activePoint: closestPoint\n      })\n      this.props.onChartHover(relativeLoc, closestPoint);\n    }\n  }\n  // STOP HOVER\n  stopHover(){\n    this.setState({hoverLoc: null, activePoint: null});\n    this.props.onChartHover(null, null);\n  }\n  // MAKE ACTIVE POINT\n  makeActivePoint(){\n    const {color, pointRadius} = this.props;\n    return (\n      <circle\n        className='linechart_point'\n        style={{stroke: color}}\n        r={pointRadius}\n        cx={this.state.activePoint.svgX}\n        cy={this.state.activePoint.svgY}\n      />\n    );\n  }\n  // MAKE HOVER LINE\n  createLine(){\n    const {svgHeight, xLabelSize} = this.props;\n    return (\n      <line className='hoverLine'\n        x1={this.state.hoverLoc} y1={-8}\n        x2={this.state.hoverLoc} y2={svgHeight - xLabelSize} />\n    )\n  }\n\n  render() {\n    const {svgHeight, svgWidth} = this.props;\n\n    return (\n      <svg  width={svgWidth} height={svgHeight} viewBox={`0 0 ${svgWidth} ${svgHeight}`} className={'linechart'}\n            onMouseLeave={ () => this.stopHover() }\n            onMouseMove={ (e) => this.getCoords(e) } >\n        <g>\n          {this.makeAxis()}\n          {this.makePath()}\n          {this.makeArea()}\n          {this.makeLabels()}\n          {this.state.hoverLoc ? this.createLine() : null}\n          {this.state.hoverLoc ? this.makeActivePoint() : null}\n        </g>\n      </svg>\n    );\n  }\n}\n// DEFAULT PROPS\nLineChart.defaultProps = {\n  data: [],\n  color: '#2196F3',\n  pointRadius: 5,\n  svgHeight: 300,\n  svgWidth: 900,\n  xLabelSize: 20,\n  yLabelSize: 80\n}\n\nexport default LineChart;\n","import React, { Component } from 'react';\nimport './ToolTip.css';\n\nclass ToolTip extends Component {\n\n  render() {\n    const {hoverLoc, activePoint} = this.props;\n    const svgLocation = document.getElementsByClassName(\"linechart\")[0].getBoundingClientRect();\n\n    let placementStyles = {};\n    let width = 100;\n    placementStyles.width = width + 'px';\n    placementStyles.left = hoverLoc + svgLocation.left - (width/2);\n\n    return (\n      <div className='hover' style={ placementStyles }>\n        <div className='date'>{ activePoint.d }</div>\n        <div className='price'>{activePoint.p }</div>\n      </div>\n    )\n  }\n}\n\nexport default ToolTip;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport './InfoBox.css';\n\nclass InfoBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPrice: null,\n      monthChangeD: null,\n      monthChangeP: null,\n      updatedAt: null\n    }\n  }\n  componentDidMount(){\n    this.getData = () => {\n      const {data} = this.props;\n      const url = 'https://api.coindesk.com/v1/bpi/currentprice.json';\n\n      fetch(url).then(r => r.json())\n        .then((bitcoinData) => {\n          const price = bitcoinData.bpi.USD.rate_float;\n          const change = price - data[0].y;\n          const changeP = (price - data[0].y) / data[0].y * 100;\n\n          this.setState({\n            currentPrice: bitcoinData.bpi.USD.rate_float,\n            monthChangeD: change.toLocaleString('us-EN',{ style: 'currency', currency: 'USD' }),\n            monthChangeP: changeP.toFixed(2) + '%',\n            updatedAt: bitcoinData.time.updated\n          })\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n    this.getData();\n    this.refresh = setInterval(() => this.getData(), 90000);\n  }\n  componentWillUnmount(){\n    clearInterval(this.refresh);\n  }\n  render(){\n    return (\n      <div id=\"data-container\">\n        { this.state.currentPrice ?\n          <div id=\"left\" className='box'>\n            <div className=\"heading\">{this.state.currentPrice.toLocaleString('us-EN',{ style: 'currency', currency: 'USD' })}</div>\n            <div className=\"subtext\">{'Updated ' + moment(this.state.updatedAt ).fromNow()}</div>\n          </div>\n        : null}\n        { this.state.currentPrice ?\n          <div id=\"middle\" className='box'>\n            <div className=\"heading\">{this.state.monthChangeD}</div>\n            <div className=\"subtext\">Change Since Last Month (USD)</div>\n          </div>\n        : null}\n          <div id=\"right\" className='box'>\n            <div className=\"heading\">{this.state.monthChangeP}</div>\n            <div className=\"subtext\">Change Since Last Month (%)</div>\n          </div>\n\n      </div>\n    );\n  }\n}\n\nexport default InfoBox;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport './App.css';\nimport LineChart from './LineChart';\nimport ToolTip from './ToolTip';\nimport InfoBox from './InfoBox';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetchingData: true,\n      data: null,\n      hoverLoc: null,\n      activePoint: null\n    }\n  }\n  handleChartHover(hoverLoc, activePoint){\n    this.setState({\n      hoverLoc: hoverLoc,\n      activePoint: activePoint\n    })\n  }\n  componentDidMount(){\n    const getData = () => {\n      const url = 'https://api.coindesk.com/v1/bpi/historical/close.json';\n\n      fetch(url).then( r => r.json())\n        .then((bitcoinData) => {\n          const sortedData = [];\n          let count = 0;\n          for (let date in bitcoinData.bpi){\n            sortedData.push({\n              d: moment(date).format('MMM DD'),\n              p: bitcoinData.bpi[date].toLocaleString('us-EN',{ style: 'currency', currency: 'USD' }),\n              x: count, //previous days\n              y: bitcoinData.bpi[date] // numerical price\n            });\n            count++;\n          }\n          this.setState({\n            data: sortedData,\n            fetchingData: false\n          })\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n    getData();\n  }\n  render() {\n    return (\n\n      <div className='container'>\n        <div className='row'>\n          <h1>30 Day Bitcoin Price Chart</h1>\n        </div>\n        <div className='row'>\n          { !this.state.fetchingData ?\n          <InfoBox data={this.state.data} />\n          : null }\n        </div>\n        <div className='row'>\n          <div className='popup'>\n            {this.state.hoverLoc ? <ToolTip hoverLoc={this.state.hoverLoc} activePoint={this.state.activePoint}/> : null}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='chart'>\n            { !this.state.fetchingData ?\n              <LineChart data={this.state.data} onChartHover={ (a,b) => this.handleChartHover(a,b) }/>\n              : null }\n          </div>\n        </div>\n        <div className='row'>\n          <div id=\"coindesk\"> Powered by <a href=\"http://www.coindesk.com/price/\">CoinDesk</a></div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}